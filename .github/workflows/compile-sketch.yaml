name: Compile Sketch

# The workflow will run on every push to the repository
on:
  - push

jobs:
  compile-sketch:
    runs-on: ubuntu-latest

    steps:
      # This step makes the contents of the repository available to the workflow
      - name: Checkout repository
        uses: actions/checkout@v2

      # For more information: https://github.com/arduino/compile-sketches#readme
      - name: Compile Arduino sketch
        uses: arduino/compile-sketches@v1
        with:
          # The default is to compile for the Arduino Uno board. If you want to compile for other boards, use the `fqbn` input.
          sketch-paths: |
            # Configure the action to search all folders under the root of the repository for sketches and compile them.
            # This is formatted as a YAML list, which makes it possible to have multiple sketch paths if needed.
            - ./ArduinoProject
          libraries: |
            - name: "DHT_nonblocking"
              source-url: https://github.com/olewolf/DHT_nonblocking.git
      - name: Compile Esp sketch
        uses: arduino/compile-sketches@v1
        with:
          fqbn: 'esp8266:esp8266:nodemcuv2'
          # The default is to compile for the Arduino Uno board. If you want to compile for other boards, use the `fqbn` input.
          sketch-paths: |
            # Configure the action to search all folders under the root of the repository for sketches and compile them.
            # This is formatted as a YAML list, which makes it possible to have multiple sketch paths if needed.
            - ./EspProject
          platforms: |
            - name: 'esp8266:esp8266'
              version: latest
              source-url: 'http://arduino.esp8266.com/stable/package_esp8266com_index.json'
          libraries: |
            - name: "PubSubClient"
              source-url: https://github.com/knolleary/pubsubclient.git   
  release:
    if: github.event_name == 'push'
    needs:
      - compile-sketch
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        run: |
          npm install
          npm ci
          npx semantic-release
  success:
    runs-on: ubuntu-latest
    needs:
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}